Данное приложение является первым опытом в django.

Используется:
 - Python 2.7
 - Django 1.8
 - Postgres 9.4

Назначение:
Ведение статистики проделанной работы.
Добавление задания.
Получение статистики заинтервал.
Разделение по пользователям с использованием сессий.

Цель:
 + Сделать скелет.
 + Сделать авторизацию.
 + Сделать добавление активности.
 + Сделать вывод активностей.
 + Сделать добавление переработки.
 + Сделать вывод переработок.
 - Сделать валидацию данных в форме отправки на JS(отказался).
 + Сделать валидацию данных на backend.
 + Сделать страницу настроек. (сейчас смена пароля пользователя)
 + Сделать сраницу админки с управлением пользователями. (стандартная)
 + Сделать найтройку автоматической сборки статических файлов.
 + Настроено логирование.
 + Исправить ошибку проверки request.user.is_authenticated().
 - Исправить календарь. Убрать инициализации с каждого шаблона в отдельный файл и подгружать его в конце страницы.
 - Добавить шаблон олтчета о ночных работах.
 - Добавить выбор отчетов о пробеланных работах.
 - Опционально добавить пункт о работах ГФ или ЛГ.

Настройка в связке с apache.
1. Настроить mod_wsgi
2. Пример измений/добавлений в конфигурации apache:
LoadModule wsgi_module modules/mod_wsgi.so

#WSGI block
WSGIScriptAlias /help "C:/GitHub/help/help/wsgi.py"
WSGIPythonPath "C:/GitHub/help"
Alias /static/ "C:/GitHub/help/static/"

<Directory "C:/GitHub/help/help">
	Order allow,deny
	Allow from all
<Files wsgi.py>
	Allow from all
</Files>
</Directory>

<Directory "C:/GitHub/help/static/">
	Allow from all
</Directory>
3. Перезапустить apache.

Локальный запуск:
python manage.py collectstatic
