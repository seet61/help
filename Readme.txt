Добро пожаловать в help.

Данное приложение предназначено для упрощения ведения статистики о проделанной работе сотрудников бизнес систем:
1. Ведение статистики проделанной работы.
2. Добавление задания.
3. Получение статистики за интервал времени.
4. Разделение по пользователям с использованием сессий.
5. Добавление информации ночных работах.
6. Получение информации за интервал времени.

Используется:
 - Python 2.7
 - Django 1.8
 - Postgres 9.4
 - http://materializecss.com
 - https://github.com/chingyawhao/materialize-clockpicker

4CAF50 - Код используемого зеленого цвета

Цель:

v.0.2:
 + Добавить шаблон отчета о ночных работах.
 + Добавить выбор отчетов о пробеланных работах.
 + Опционально добавить пункт о работах ГФ или ЛГ.
 + Сделать поиск по работам.
 + Добавить пункт "to do".
 + Добавить форму добавления записи "to do".
 + Добавить кнопку выполнения пунктов "to do".
 - Убрать страницу добавления активности
 - Добавить Modal Structure для добавления активности на странице "Список активностей".
 + Убрать страницу добавления переработок.
 + Добавить Modal Structure для добавления активности на странице "Список переработок".
 + Настроить логирование(поломано).
 + На страницах выбора диапозона дат, если не выбрать вторую дату, то считать по умолчанию текущей. 
 + Добавить две даты на форме добавления "to do": дата возникновения, выполнить до. 
 - Добавить тесты по моделям
 - Добавить тесты по клиенту

v.0.1:
 + Сделать скелет.
 + Сделать авторизацию.
 + Сделать добавление активности.
 + Сделать вывод активностей.
 + Сделать добавление переработки.
 + Сделать вывод переработок.
 - Сделать валидацию данных в форме отправки на JS(отказался).
 + Сделать валидацию данных на backend.
 + Сделать страницу настроек. (сейчас смена пароля пользователя)
 + Сделать сраницу админки с управлением пользователями. (стандартная)
 + Сделать наcтройку автоматической сборки статических файлов.
 + Исправить ошибку проверки request.user.is_authenticated().
 + Исправить календарь. Убрать инициализации с каждого шаблона в отдельный файл и подгружать его в конце страницы.


Настройка в связке с apache.
1. http://ntischuk.com/2012/02/05/python-apache-install-mod_wsgi-on-windows/
2. Установка whl: pip install *.whl
3. Добавить в httpd.conf LoadModule wsgi_module modules/mod_wsgi.so
4. Пример измений/добавлений в конфигурации apache:
#WSGI block
WSGIScriptAlias /help "C:/GitHub/help/help/wsgi.py"
WSGIPythonPath "C:/Python27"
WSGIPythonHome "C:/Python27" 
Alias /static/ "C:/GitHub/help/static/"

<Directory "C:/GitHub/help/help">
	Order allow,deny
	Allow from all
<Files wsgi.py>
	Allow from all
</Files>                 o
</Directory>

<Directory "C:/GitHub/help/static/">
	Allow from all
</Directory>
5. Перезапустить Apache.

Сбор статических файлов:
python manage.py collectstatic

Локальный запуск:
python manage.py runserver 10.1.10.110:9000
